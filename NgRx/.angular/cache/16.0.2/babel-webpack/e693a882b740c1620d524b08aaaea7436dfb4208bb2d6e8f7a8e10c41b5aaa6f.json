{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass CounterService {\n  constructor() {\n    this.counter = 0;\n    this.counterChanged = new Subject();\n  }\n  increment() {\n    this.counter++;\n    this.counterChanged.next(this.counter);\n  }\n  decrement() {\n    this.counter--;\n    this.counterChanged.next(this.counter);\n  }\n}\nCounterService.ɵfac = function CounterService_Factory(t) {\n  return new (t || CounterService)();\n};\nCounterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CounterService,\n  factory: CounterService.ɵfac,\n  providedIn: 'root'\n});\nexport { CounterService };","map":{"version":3,"names":["Subject","CounterService","constructor","counter","counterChanged","increment","next","decrement","factory","ɵfac","providedIn"],"sources":["/Users/barberj/GitHub Code/Angular-The-Complete-Guide/NgRx/src/app/counter.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class CounterService {\n  counter = 0;\n  counterChanged = new Subject<number>();\n\n  increment() {\n    this.counter++;\n    this.counterChanged.next(this.counter)\n  }\n\n  decrement() {\n    this.counter--;\n    this.counterChanged.next(this.counter)\n  }\n}\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAE9B,MACaC,cAAc;EAD3BC,YAAA;IAEE,KAAAC,OAAO,GAAG,CAAC;IACX,KAAAC,cAAc,GAAG,IAAIJ,OAAO,EAAU;;EAEtCK,SAASA,CAAA;IACP,IAAI,CAACF,OAAO,EAAE;IACd,IAAI,CAACC,cAAc,CAACE,IAAI,CAAC,IAAI,CAACH,OAAO,CAAC;EACxC;EAEAI,SAASA,CAAA;IACP,IAAI,CAACJ,OAAO,EAAE;IACd,IAAI,CAACC,cAAc,CAACE,IAAI,CAAC,IAAI,CAACH,OAAO,CAAC;EACxC;;AAZWF,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAO,OAAA,EAAdP,cAAc,CAAAQ,IAAA;EAAAC,UAAA,EADF;AAAM;SAClBT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}